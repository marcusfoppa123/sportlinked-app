

// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import { Database } from '@/types/supabase';

const supabaseUrl = "https://tanfwjpaukclrgiugafk.supabase.co";
const supabaseAnonKey = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InRhbmZ3anBhdWtjbHJnaXVnYWZrIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDQ3Mjg1MzcsImV4cCI6MjA2MDMwNDUzN30.xxlUor0cSLAWiYee1B54P57SVUT6GFoGiRO7tHHgmsk";

export const supabase = createClient<Database>(supabaseUrl, supabaseAnonKey, {
  auth: {
    storage: localStorage,
    persistSession: true,
    autoRefreshToken: true,
  }
});

// Add helper function for checking follow status
export const checkIfUserIsFollowing = async (currentUserId: string, targetUserId: string): Promise<boolean> => {
  if (!currentUserId || !targetUserId) return false;
  
  try {
    const { data, error } = await supabase
      .from('followers')
      .select('id')
      .eq('follower_id', currentUserId)
      .eq('following_id', targetUserId)
      .maybeSingle();
    
    if (error) {
      console.error('Error checking follow status:', error);
      return false;
    }
    
    return !!data;
  } catch (err) {
    console.error('Exception checking follow status:', err);
    return false;
  }
};

// Add helper function for following a user
export const followUser = async (currentUserId: string, targetUserId: string): Promise<{ success: boolean, error?: any }> => {
  if (!currentUserId || !targetUserId) {
    return { success: false, error: 'Invalid user IDs' };
  }
  
  try {
    // First check if already following to prevent duplicate entries
    const isFollowing = await checkIfUserIsFollowing(currentUserId, targetUserId);
    if (isFollowing) {
      return { success: true }; // Already following, consider it a success
    }
    
    const { data, error } = await supabase
      .from('followers')
      .insert({
        follower_id: currentUserId,
        following_id: targetUserId
      })
      .select()
      .single();
    
    if (error) {
      console.error('Error following user:', error);
      return { success: false, error };
    }
    
    return { success: true };
  } catch (err) {
    console.error('Exception following user:', err);
    return { success: false, error: err };
  }
};

// Add helper function for unfollowing a user
export const unfollowUser = async (currentUserId: string, targetUserId: string): Promise<{ success: boolean, error?: any }> => {
  if (!currentUserId || !targetUserId) {
    return { success: false, error: 'Invalid user IDs' };
  }
  
  try {
    const { error } = await supabase
      .from('followers')
      .delete()
      .eq('follower_id', currentUserId)
      .eq('following_id', targetUserId);
    
    if (error) {
      console.error('Error unfollowing user:', error);
      return { success: false, error };
    }
    
    return { success: true };
  } catch (err) {
    console.error('Exception unfollowing user:', err);
    return { success: false, error: err };
  }
};
